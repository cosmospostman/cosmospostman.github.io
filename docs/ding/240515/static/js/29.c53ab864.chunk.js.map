{"version":3,"file":"static/js/29.c53ab864.chunk.js","mappings":"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","sources":["../node_modules/native-file-system-adapter/src/adapters/memory.js"],"sourcesContent":["import { errors } from '../util.js'\nimport config from '../config.js'\n\nconst { File, Blob, DOMException } = config\nconst { INVALID, GONE, MISMATCH, MOD_ERR, SYNTAX, SECURITY, DISALLOWED } = errors\n\nexport class Sink {\n\n  /**\n   * @param {FileHandle} fileHandle\n   * @param {File} file\n   */\n  constructor (fileHandle, file) {\n    this.fileHandle = fileHandle\n    this.file = file\n    this.size = file.size\n    this.position = 0\n  }\n\n  write (chunk) {\n    let file = this.file\n\n    if (typeof chunk === 'object') {\n      if (chunk.type === 'write') {\n        if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n          this.position = chunk.position\n          if (this.size < chunk.position) {\n            this.file = new File(\n              [this.file, new ArrayBuffer(chunk.position - this.size)],\n              this.file.name,\n              this.file\n            )\n          }\n        }\n        if (!('data' in chunk)) {\n          throw new DOMException(...SYNTAX('write requires a data argument'))\n        }\n        chunk = chunk.data\n      } else if (chunk.type === 'seek') {\n        if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n          if (this.size < chunk.position) {\n            throw new DOMException(...INVALID)\n          }\n          this.position = chunk.position\n          return\n        } else {\n          throw new DOMException(...SYNTAX('seek requires a position argument'))\n        }\n      } else if (chunk.type === 'truncate') {\n        if (Number.isInteger(chunk.size) && chunk.size >= 0) {\n          file = chunk.size < this.size\n            ? new File([file.slice(0, chunk.size)], file.name, file)\n            : new File([file, new Uint8Array(chunk.size - this.size)], file.name)\n\n          this.size = file.size\n          if (this.position > file.size) {\n            this.position = file.size\n          }\n          this.file = file\n          return\n        } else {\n          throw new DOMException(...SYNTAX('truncate requires a size argument'))\n        }\n      }\n    }\n\n    chunk = new Blob([chunk])\n\n    let blob = this.file\n    // Calc the head and tail fragments\n    const head = blob.slice(0, this.position)\n    const tail = blob.slice(this.position + chunk.size)\n\n    // Calc the padding\n    let padding = this.position - head.size\n    if (padding < 0) {\n      padding = 0\n    }\n    blob = new File([\n      head,\n      new Uint8Array(padding),\n      chunk,\n      tail\n    ], blob.name)\n\n    this.size = blob.size\n    this.position += chunk.size\n\n    this.file = blob\n  }\n  close () {\n    if (this.fileHandle._deleted) throw new DOMException(...GONE)\n    this.fileHandle._file = this.file\n    this.file =\n    this.position =\n    this.size = null\n    if (this.fileHandle.onclose) {\n      this.fileHandle.onclose(this.fileHandle)\n    }\n  }\n}\n\nexport class FileHandle {\n  constructor (name = '', file = new File([], name), writable = true) {\n    this._file = file\n    this.name = name\n    this.kind = 'file'\n    this._deleted = false\n    this.writable = writable\n    this.readable = true\n  }\n\n  async getFile () {\n    if (this._deleted) throw new DOMException(...GONE)\n    return this._file\n  }\n\n  async createWritable (opts) {\n    if (!this.writable) throw new DOMException(...DISALLOWED)\n    if (this._deleted) throw new DOMException(...GONE)\n\n    const file = opts.keepExistingData\n      ? await this.getFile()\n      : new File([], this.name)\n\n    return new Sink(this, file)\n  }\n\n  async isSameEntry (other) {\n    return this === other\n  }\n\n  async _destroy () {\n    this._deleted = true\n    this._file = null\n  }\n}\n\nexport class FolderHandle {\n\n  /** @param {string} name */\n  constructor (name, writable = true) {\n    this.name = name\n    this.kind = 'directory'\n    this._deleted = false\n    /** @type {Object.<string, (FolderHandle|FileHandle)>} */\n    this._entries = {}\n    this.writable = writable\n    this.readable = true\n  }\n\n  /** @returns {AsyncGenerator<[string, FileHandle | FolderHandle]>} */\n  async * entries () {\n    if (this._deleted) throw new DOMException(...GONE)\n    yield* Object.entries(this._entries)\n  }\n\n  async isSameEntry (other) {\n    return this === other\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ create: boolean; }} opts\n   */\n  async getDirectoryHandle (name, opts) {\n    if (this._deleted) throw new DOMException(...GONE)\n    const entry = this._entries[name]\n    if (entry) { // entry exist\n      if (entry instanceof FileHandle) {\n        throw new DOMException(...MISMATCH)\n      } else {\n        return entry\n      }\n    } else {\n      if (opts.create) {\n        return (this._entries[name] = new FolderHandle(name))\n      } else {\n        throw new DOMException(...GONE)\n      }\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ create: boolean; }} opts\n   */\n  async getFileHandle (name, opts) {\n    const entry = this._entries[name]\n    const isFile = entry instanceof FileHandle\n    if (entry && isFile) return entry\n    if (entry && !isFile) throw new DOMException(...MISMATCH)\n    if (!entry && !opts.create) throw new DOMException(...GONE)\n    if (!entry && opts.create) {\n      return (this._entries[name] = new FileHandle(name))\n    }\n  }\n\n  async removeEntry (name, opts) {\n    const entry = this._entries[name]\n    if (!entry) throw new DOMException(...GONE)\n    await entry._destroy(opts.recursive)\n    delete this._entries[name]\n  }\n\n  async _destroy (recursive) {\n    for (let x of Object.values(this._entries)) {\n      if (!recursive) throw new DOMException(...MOD_ERR)\n      await x._destroy(recursive)\n    }\n    this._entries = {}\n    this._deleted = true\n  }\n}\n\nconst fs = new FolderHandle('')\n\nexport default () => fs\n"],"names":["File","config","Blob","DOMException","INVALID","errors","GONE","MISMATCH","MOD_ERR","SYNTAX","DISALLOWED","SECURITY","Sink","fileHandle","file","_classCallCheck","this","size","position","_createClass","key","value","chunk","type","Number","isInteger","ArrayBuffer","name","_construct","_toConsumableArray","data","slice","Uint8Array","blob","head","tail","padding","_deleted","_file","onclose","FileHandle","arguments","length","undefined","writable","kind","readable","_getFile","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","stop","apply","_createWritable","_callee2","opts","_context2","keepExistingData","getFile","t0","sent","_x","_isSameEntry","_callee3","other","_context3","_x2","_destroy2","_callee4","_context4","FolderHandle","_entries","_this","_wrapAsyncGenerator","_callee5","_context5","delegateYield","_asyncGeneratorDelegate","_asyncIterator","Object","entries","_awaitAsyncGenerator","_isSameEntry2","_callee6","_context6","_x3","_getDirectoryHandle","_callee7","entry","_context7","create","_x4","_x5","_getFileHandle","_callee8","isFile","_context8","_x6","_x7","_removeEntry","_callee9","_context9","_destroy","recursive","_x8","_x9","_destroy3","_callee10","_i","_Object$values","x","_context10","values","_x10","fs"],"sourceRoot":""}