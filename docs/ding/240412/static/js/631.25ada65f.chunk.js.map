{"version":3,"file":"static/js/631.25ada65f.chunk.js","mappings":"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","sources":["../node_modules/native-file-system-adapter/src/adapters/downloader.js"],"sourcesContent":["import { errors } from '../util.js'\nimport config from '../config.js'\n\nconst {\n  WritableStream,\n  TransformStream,\n  DOMException,\n  Blob\n} = config\n\nconst { GONE } = errors\n// @ts-ignore - Don't match newer versions of Safari, but that's okay\nconst isOldSafari = /constructor/i.test(window.HTMLElement)\n\nexport class FileHandle {\n  constructor (name = 'unkown') {\n    this.name = name\n    this.kind = 'file'\n  }\n\n  async getFile () {\n    throw new DOMException(...GONE)\n  }\n\n  async isSameEntry(other) {\n    return this === other\n  }\n\n  /**\n   * @param {object} [options={}]\n   */\n  async createWritable (options = {}) {\n    const sw = await navigator.serviceWorker?.getRegistration()\n    const link = document.createElement('a')\n    const ts = new TransformStream()\n    const sink = ts.writable\n\n    link.download = this.name\n\n    if (isOldSafari || !sw) {\n      /** @type {Blob[]} */\n      let chunks = []\n      ts.readable.pipeTo(new WritableStream({\n        write (chunk) {\n          chunks.push(new Blob([chunk]))\n        },\n        close () {\n          const blob = new Blob(chunks, { type: 'application/octet-stream; charset=utf-8' })\n          chunks = []\n          link.href = URL.createObjectURL(blob)\n          link.click()\n          setTimeout(() => URL.revokeObjectURL(link.href), 10000)\n        }\n      }))\n    } else {\n      const { writable, readablePort } = new RemoteWritableStream(WritableStream)\n      // Make filename RFC5987 compatible\n      const fileName = encodeURIComponent(this.name).replace(/['()]/g, escape).replace(/\\*/g, '%2A')\n      const headers = {\n        'content-disposition': \"attachment; filename*=UTF-8''\" + fileName,\n        'content-type': 'application/octet-stream; charset=utf-8',\n        ...(options.size ? { 'content-length': options.size } : {})\n      }\n\n      const keepAlive = setTimeout(() => sw.active.postMessage(0), 10000)\n\n      ts.readable.pipeThrough(new TransformStream({\n        transform (chunk, ctrl) {\n          if (chunk instanceof Uint8Array) return ctrl.enqueue(chunk)\n          const reader = new Response(chunk).body.getReader()\n          const pump = _ => reader.read().then(e => e.done ? 0 : pump(ctrl.enqueue(e.value)))\n          return pump()\n        }\n      })).pipeTo(writable).finally(() => {\n        clearInterval(keepAlive)\n      })\n\n      // Transfer the stream to service worker\n      sw.active.postMessage({\n        url: sw.scope + fileName,\n        headers,\n        readablePort\n      }, [readablePort])\n\n      // Trigger the download with a hidden iframe\n      const iframe = document.createElement('iframe')\n      iframe.hidden = true\n      iframe.src = sw.scope + fileName\n      document.body.appendChild(iframe)\n    }\n\n    return sink.getWriter()\n  }\n}\n\n// Want to remove this postMessage hack, tell them u want transferable streams:\n// https://bugs.webkit.org/show_bug.cgi?id=215485\n\nconst WRITE = 0\nconst PULL = 0\nconst ERROR = 1\nconst ABORT = 1\nconst CLOSE = 2\n\nclass MessagePortSink {\n  /** @param {MessagePort} port */\n  constructor (port) {\n    port.onmessage = event => this._onMessage(event.data)\n    this._port = port\n    this._resetReady()\n  }\n\n  start (controller) {\n    this._controller = controller\n    // Apply initial backpressure\n    return this._readyPromise\n  }\n\n  write (chunk) {\n    const message = { type: WRITE, chunk }\n\n    // Send chunk\n    this._port.postMessage(message, [chunk.buffer])\n\n    // Assume backpressure after every write, until sender pulls\n    this._resetReady()\n\n    // Apply backpressure\n    return this._readyPromise\n  }\n\n  close () {\n    this._port.postMessage({ type: CLOSE })\n    this._port.close()\n  }\n\n  abort (reason) {\n    this._port.postMessage({ type: ABORT, reason })\n    this._port.close()\n  }\n\n  _onMessage (message) {\n    if (message.type === PULL) this._resolveReady()\n    if (message.type === ERROR) this._onError(message.reason)\n  }\n\n  _onError (reason) {\n    this._controller.error(reason)\n    this._rejectReady(reason)\n    this._port.close()\n  }\n\n  _resetReady () {\n    this._readyPromise = new Promise((resolve, reject) => {\n      this._readyResolve = resolve\n      this._readyReject = reject\n    })\n    this._readyPending = true\n  }\n\n  _resolveReady () {\n    this._readyResolve()\n    this._readyPending = false\n  }\n\n  _rejectReady (reason) {\n    if (!this._readyPending) this._resetReady()\n    this._readyPromise.catch(() => {})\n    this._readyReject(reason)\n    this._readyPending = false\n  }\n}\n\nclass RemoteWritableStream {\n  constructor (WritableStream) {\n    const channel = new MessageChannel()\n    this.readablePort = channel.port1\n    this.writable = new WritableStream(\n      new MessagePortSink(channel.port2)\n    )\n  }\n}\n"],"names":["WritableStream","config","TransformStream","DOMException","Blob","GONE","errors","isOldSafari","test","window","HTMLElement","FileHandle","name","arguments","length","undefined","_classCallCheck","this","kind","_createClass","key","value","_getFile","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","_construct","_toConsumableArray","stop","apply","_isSameEntry","_callee2","other","_context2","abrupt","_x","_createWritable","_callee3","_navigator$serviceWor","options","sw","link","ts","sink","chunks","_RemoteWritableStream","writable","readablePort","fileName","headers","keepAlive","iframe","_args3","_context3","navigator","serviceWorker","getRegistration","sent","document","createElement","download","readable","pipeTo","write","chunk","push","close","blob","type","href","URL","createObjectURL","click","setTimeout","revokeObjectURL","RemoteWritableStream","encodeURIComponent","replace","escape","_objectSpread","size","active","postMessage","pipeThrough","transform","ctrl","Uint8Array","enqueue","reader","Response","body","getReader","pump","_","read","then","e","done","finally","clearInterval","url","scope","hidden","src","appendChild","getWriter","MessagePortSink","port","_this","onmessage","event","_onMessage","data","_port","_resetReady","controller","_controller","_readyPromise","message","buffer","reason","_resolveReady","_onError","error","_rejectReady","_this2","Promise","resolve","reject","_readyResolve","_readyReject","_readyPending","catch","channel","MessageChannel","port1","port2"],"sourceRoot":""}