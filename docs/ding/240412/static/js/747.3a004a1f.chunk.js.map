{"version":3,"file":"static/js/747.3a004a1f.chunk.js","mappings":"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","sources":["../node_modules/native-file-system-adapter/src/adapters/sandbox.js"],"sourcesContent":["/* global Blob, DOMException */\n\nimport { errors } from '../util.js'\n\nconst { DISALLOWED } = errors\n\nclass Sink {\n  /**\n   * @param {FileWriter} writer\n   * @param {FileEntry} fileEntry\n   */\n  constructor (writer, fileEntry) {\n    this.writer = writer\n    this.fileEntry = fileEntry\n  }\n\n  /**\n   * @param {BlobPart | Object} chunk\n   */\n  async write (chunk) {\n    if (typeof chunk === 'object') {\n      if (chunk.type === 'write') {\n        if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n          this.writer.seek(chunk.position)\n          if (this.writer.position !== chunk.position) {\n            await new Promise((resolve, reject) => {\n              this.writer.onwriteend = resolve\n              this.writer.onerror = reject\n              this.writer.truncate(chunk.position)\n            })\n            this.writer.seek(chunk.position)\n          }\n        }\n        if (!('data' in chunk)) {\n          throw new DOMException('Failed to execute \\'write\\' on \\'UnderlyingSinkBase\\': Invalid params passed. write requires a data argument', 'SyntaxError')\n        }\n        chunk = chunk.data\n      } else if (chunk.type === 'seek') {\n        if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n          this.writer.seek(chunk.position)\n          if (this.writer.position !== chunk.position) {\n            throw new DOMException('seeking position failed', 'InvalidStateError')\n          }\n          return\n        } else {\n          throw new DOMException('Failed to execute \\'write\\' on \\'UnderlyingSinkBase\\': Invalid params passed. seek requires a position argument', 'SyntaxError')\n        }\n      } else if (chunk.type === 'truncate') {\n        return new Promise(resolve => {\n          if (Number.isInteger(chunk.size) && chunk.size >= 0) {\n            this.writer.onwriteend = evt => resolve()\n            this.writer.truncate(chunk.size)\n          } else {\n            throw new DOMException('Failed to execute \\'write\\' on \\'UnderlyingSinkBase\\': Invalid params passed. truncate requires a size argument', 'SyntaxError')\n          }\n        })\n      }\n    }\n    await new Promise((resolve, reject) => {\n      this.writer.onwriteend = resolve\n      this.writer.onerror = reject\n      this.writer.write(new Blob([chunk]))\n    })\n  }\n\n  close () {\n    return new Promise(this.fileEntry.file.bind(this.fileEntry))\n  }\n}\n\nexport class FileHandle {\n  /** @param {FileEntry} file */\n  constructor (file, writable = true) {\n    this.file = file\n    this.kind = 'file'\n    this.writable = writable\n    this.readable = true\n  }\n\n  get name () {\n    return this.file.name\n  }\n\n  /**\n   * @param {{ file: { toURL: () => string; }; }} other\n   */\n  isSameEntry (other) {\n    return this.file.toURL() === other.file.toURL()\n  }\n\n  /** @return {Promise<File>} */\n  getFile () {\n    return new Promise(this.file.file.bind(this.file))\n  }\n\n  /** @return {Promise<Sink>} */\n  createWritable (opts) {\n    if (!this.writable) throw new DOMException(...DISALLOWED)\n\n    return new Promise((resolve, reject) =>\n      this.file.createWriter(fileWriter => {\n        if (opts.keepExistingData === false) {\n          fileWriter.onwriteend = evt => resolve(new Sink(fileWriter, this.file))\n          fileWriter.truncate(0)\n        } else {\n          resolve(new Sink(fileWriter, this.file))\n        }\n      }, reject)\n    )\n  }\n}\n\nexport class FolderHandle {\n  /** @param {DirectoryEntry} dir */\n  constructor (dir, writable = true) {\n    this.dir = dir\n    this.writable = writable\n    this.readable = true\n    this.kind = 'directory'\n    this.name = dir.name\n  }\n\n  /** @param {FolderHandle} other */\n  isSameEntry (other) {\n    return this.dir.fullPath === other.dir.fullPath\n  }\n\n  /** @returns {AsyncGenerator<[string, FileHandle | FolderHandle]>} */\n  async * entries () {\n    const reader = this.dir.createReader()\n    const entries = await new Promise(reader.readEntries.bind(reader))\n    for (const x of entries) {\n      yield [x.name, x.isFile ? new FileHandle(x, this.writable) : new FolderHandle(x, this.writable)]\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ create: boolean; }} opts\n   * @returns {Promise<FolderHandle>}\n   */\n  getDirectoryHandle (name, opts) {\n    return new Promise((resolve, reject) => {\n      this.dir.getDirectory(name, opts, dir => {\n        resolve(new FolderHandle(dir))\n      }, reject)\n    })\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ create: boolean; }} opts\n   * @returns {Promise<FileHandle>}\n   */\n  getFileHandle (name, opts) {\n    return new Promise((resolve, reject) =>\n      this.dir.getFile(name, opts, file => resolve(new FileHandle(file)), reject)\n    )\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ recursive: boolean; }} opts\n   */\n  async removeEntry (name, opts) {\n    /** @type {Error|FolderHandle|FileHandle} */\n    const entry = await this.getDirectoryHandle(name, { create: false }).catch(err =>\n      err.name === 'TypeMismatchError' ? this.getFileHandle(name, { create: false }) : err\n    )\n\n    if (entry instanceof Error) throw entry\n\n    return new Promise((resolve, reject) => {\n      if (entry instanceof FolderHandle) {\n        opts.recursive\n          ? entry.dir.removeRecursively(() => resolve(), reject)\n          : entry.dir.remove(() => resolve(), reject)\n      } else if (entry.file) {\n        entry.file.remove(() => resolve(), reject)\n      }\n    })\n  }\n}\n\nexport default (opts = {}) => new Promise((resolve, reject) =>\n  window.webkitRequestFileSystem(\n    opts._persistent, 0,\n    e => resolve(new FolderHandle(e.root)),\n    reject\n  )\n)\n"],"names":["DISALLOWED","errors","Sink","writer","fileEntry","_classCallCheck","this","_createClass","key","value","_write","_asyncToGenerator","_regeneratorRuntime","mark","_callee","chunk","_this2","wrap","_context","prev","next","type","Number","isInteger","position","seek","Promise","resolve","reject","onwriteend","onerror","truncate","DOMException","data","abrupt","size","evt","write","Blob","stop","_x","apply","arguments","file","bind","FileHandle","writable","length","undefined","kind","readable","get","name","other","toURL","opts","_this3","_construct","_toConsumableArray","createWriter","fileWriter","keepExistingData","FolderHandle","dir","fullPath","_this","_wrapAsyncGenerator","_callee2","reader","entries","_iterator","_step","x","_context2","createReader","_awaitAsyncGenerator","readEntries","sent","_createForOfIteratorHelper","s","n","done","isFile","t0","e","f","finish","_this4","getDirectory","_this5","getFile","_removeEntry","_callee3","entry","_this6","_context3","getDirectoryHandle","create","catch","err","getFileHandle","Error","recursive","removeRecursively","remove","_x2","_x3","window","webkitRequestFileSystem","_persistent","root"],"sourceRoot":""}